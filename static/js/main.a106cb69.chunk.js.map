{"version":3,"sources":["Mic.tsx","ConnectionContext.tsx","CanvasEditor.ts","Editor.tsx","Onboard.tsx","App.tsx","index.js","img/logo.png"],"names":["passiveSupported","options","window","addEventListener","removeEventListener","err","Mic","props","rootDiv","onKeyUp","onKeyDown","onUnmount","React","createRef","onDown","onUp","event","cb","this","current","passive","document","onkeydown","e","handleSpacebar","onkeyup","clientConnecting","clientState","ClientState","Connecting","clientConnected","Connected","rootClassName","classNames","micClassName","hidden","Microphone__button__active","Recording","Microphone__button__inactive","Stopping","helpClassName","console","log","stateToString","className","ref","style","height","CircularProgress","size","xmlns","aria-hidden","tabIndex","viewBox","stroke","strokeWidth","cx","cy","r","fill","d","transform","x","y","Component","keyCode","preventDefault","defaultState","stopContext","_event","startContext","recordButtonIsPressed","isTapping","Disconnected","words","contextId","ConnectionContext","createContext","ConnectionContextProvider","browserClientStateChanged","setState","state","updateStateBySegmentChange","segment","updateWords","id","isFinal","intent","length","imageEditor","undo","filterName","collectEntity","entities","entity2canonical","enableFilter","disableFilter","propertyName","incrementProperty","decrementProperty","entityList","entityType","filter","item","type","value","toLowerCase","client","error","initialize","toggleRecordButtonState","recordButtonIsPressedStarted","recordButtonIsPressedStopped","stopRecording","Boolean","getTime","Date","closeClient","close","undefined","segmentId","newWords","i","index","parseInt","transcriptDiv","html","Object","keys","map","key","sort","join","innerHTML","clientBasicParams","appId","language","Client","onSegmentChange","onStateChange","Provider","children","CanvasEditor","editorHTMLDiv","imageUrl","canvas","htmlCanvas","operatorStack","imageObject","stepSize","Map","tmp","get","push","name","updateImage","pop","buildEditorState","filters","brightness","fabric","Image","Brightness","contrast","Contrast","saturation","Saturation","kodachrome","makeKodachromeFilter","vintage","makeVintageFilter","technicolor","makeTechnicolorFilter","polaroid","makePolaroidFilter","sepia","Sepia","grayscale","Grayscale","applyFilters","renderAll","cleanEditorState","op","resize","w","innerWidth","h","innerHeight","width","ColorMatrix","matrix","createElement","appendChild","prototype","transparentCorners","Canvas","outerScope","fromURL","img","oImg","resizeElements","add","set","imageOriginalHeight","imageOriginalWidth","imgRatio","winRatio","container","getElementsByClassName","scaleX","scaleY","left","top","Editor","imageEditorRef","useRef","transcriptDivRef","useState","imageEditorInstance","setImageEditorInstance","imagePath","setImagePath","process","useEffect","location","imgPath","storageObject","localStorage","setItem","JSON","stringify","json","getItem","parse","setSize","useLayoutEffect","updateSize","useWindowSize","editor","Math","min","Consumer","Onboard","allowAudio","setAllowAudio","images","setImages","imageInput","buttonClass","editorLinkParams","pathname","slice","src","logo","alt","path","onChange","files","newImage","URL","createObjectURL","checked","target","htmlFor","to","App","exact","component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a106cb69.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport { ClientState, stateToString } from \"@speechly/browser-client\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nlet passiveSupported = false;\ntry {\n  const options = {\n    get passive() {\n      // This function will be called when the browser attempts to access the passive property.\n      passiveSupported = true;\n      return passiveSupported;\n    }\n  };\n\n  // @ts-ignore\n  window.addEventListener(\"test\", options, options);\n  // @ts-ignore\n  window.removeEventListener(\"test\", options, options);\n} catch (err) {\n  passiveSupported = false;\n}\n\ninterface MicProps {\n  onDown: EventListener;\n  onUp: EventListener;\n  onUnmount: () => void;\n  clientState: ClientState;\n  classNames: string;\n}\n\nexport class Mic extends React.Component<MicProps, {}> {\n  private readonly rootDiv: React.RefObject<HTMLDivElement>;\n  private readonly onKeyUp: EventListener;\n  private readonly onKeyDown: EventListener;\n  private readonly onUnmount: () => void;\n\n  constructor(props: MicProps) {\n    super(props);\n\n    this.rootDiv = React.createRef<HTMLDivElement>();\n    this.onKeyDown = props.onDown;\n    this.onKeyUp = props.onUp;\n    this.onUnmount = props.onUnmount;\n  }\n\n  private addEventListener(event: string, cb: EventListener) {\n    if (this.rootDiv.current === null) {\n      return;\n    }\n\n    this.rootDiv.current.addEventListener(event, cb, passiveSupported ? { passive: false } : false);\n  }\n\n  private removeEventListener(event: string, cb: EventListener) {\n    if (this.rootDiv.current === null) {\n      return;\n    }\n\n    this.rootDiv.current.removeEventListener(event, cb);\n  }\n\n  componentDidMount() {\n    document.onkeydown = e => handleSpacebar(e, this.onKeyDown);\n    document.onkeyup = e => handleSpacebar(e, this.onKeyUp);\n\n    this.addEventListener(\"touchstart\", this.onKeyDown);\n    this.addEventListener(\"touchend\", this.onKeyUp);\n    this.addEventListener(\"mousedown\", this.onKeyDown);\n    this.addEventListener(\"mouseup\", this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.onkeydown = null;\n    document.onkeyup = null;\n\n    this.removeEventListener(\"touchstart\", this.onKeyDown);\n    this.removeEventListener(\"touchend\", this.onKeyUp);\n    this.removeEventListener(\"mousedown\", this.onKeyDown);\n    this.removeEventListener(\"mouseup\", this.onKeyUp);\n\n    this.onUnmount();\n  }\n\n  render() {\n    const clientConnecting = this.props.clientState === ClientState.Connecting;\n    const clientConnected = this.props.clientState >= ClientState.Connected;\n\n    const rootClassName = `Microphone ${this.props.classNames}`;\n\n    const micClassName = classNames(\"Microphone__button\", {\n      hidden: !clientConnected,\n      Microphone__button__active: this.props.clientState === ClientState.Recording,\n      Microphone__button__inactive: this.props.clientState === ClientState.Stopping\n    });\n\n    const helpClassName = classNames(\"Microphone__help\", \"HelpText\", {\n      hidden: !clientConnected\n    });\n    console.log(\"Client state: \" + stateToString(this.props.clientState));\n    console.log(micClassName);\n    return (\n      <div className={rootClassName} ref={this.rootDiv}>\n        <div style={{height: '50px'}}></div>\n        {clientConnecting && <CircularProgress size=\"3vh\" className=\"Microphone__loading\" />}\n        <div className={micClassName}>\n          <object>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" tabIndex={0} viewBox=\"-2 -2 24 24\">\n              <circle stroke=\"#d8dfe6\" strokeWidth=\"0.5\" cx=\"10\" cy=\"10\" r=\"15\" fill=\"#ffffff\" />\n              <path d=\"M10 10\" />\n              <path\n                transform=\"translate(2,2) scale(0.8)\"\n                x=\"10\"\n                y=\"10\"\n                d=\"M9 18v-1.06A8 8 0 0 1 2 9h2a6 6 0 1 0 12 0h2a8 8 0 0 1-7 7.94V18h3v2H6v-2h3zM6 4a4 4 0 1 1 8 0v5a4 4 0 1 1-8 0V4z\"\n              />\n            </svg>\n          </object>\n        </div>\n        <div className={helpClassName}>Press and hold space bar to talk</div>\n      </div>\n    );\n  }\n}\n\nfunction handleSpacebar(e: KeyboardEvent, cb: EventListener) {\n  if (e.keyCode === 32) {\n    e.preventDefault();\n    cb(e);\n  }\n}","// @ts-nocheck\nimport React, { Component } from \"react\";\nimport {\n  Client,\n  ClientState,\n  Segment,\n  SegmentChangeCallback,\n} from \"@speechly/browser-client\";\nimport {CanvasEditor} from './CanvasEditor';\n\ntype IConnectionContextProps = {\n  appId: string;\n  language: string;\n  imageEditor: CanvasEditor;\n  transcriptDiv: HTMLDivElement;\n};\n\ntype IConnectionContextState = {\n  isTapping: boolean;\n  recordButtonIsPressed: boolean;\n  recordButtonIsPressedStarted?: Date;\n  recordButtonIsPressedStopped?: Date;\n  stopContext: (event: any) => void;\n  startContext: (event: any) => void;\n  closeClient: () => void;\n  clientState: ClientState;\n  words: {};\n  contextId: string;\n};\n\nconst defaultState: IConnectionContextState = {\n  stopContext: (_event: Event) => {},\n  startContext: (_event: Event) => {},\n  recordButtonIsPressed: false,\n  isTapping: false,\n  clientState: ClientState.Disconnected,\n  words: {},\n  contextId: \"\"\n};\n\nconst ConnectionContext = React.createContext<IConnectionContextState>(defaultState);\nclass ConnectionContextProvider extends Component<IConnectionContextProps, IConnectionContextState> {\n    constructor(props: any) {\n        super(props);\n\n        const clientBasicParams = {\n            appId: this.props.appId,\n            language: this.props.language\n        };\n\n        console.log(\"Initializing client\", clientBasicParams);\n        this.client = new Client(clientBasicParams);\n        this.client.onSegmentChange(this.updateStateBySegmentChange);\n        this.client.onStateChange(this.browserClientStateChanged);\n\n        this.state = defaultState;\n\n        this.entity2canonical = {\n            \"sepia\": \"sepia\",\n            \"vintage\": \"vintage\",\n            \"classic\": \"vintage\",\n            \"faded\": \"sepia\",\n            \"grayscale\": \"grayscale\",\n            \"black and white\": \"grayscale\",\n            \"kodachrome\": \"kodachrome\",\n            \"technicolor\": \"technicolor\",\n            \"polaroid\": \"polaroid\",\n            'luminosity': 'brightness',\n            'brightness': 'brightness',\n            'light': 'brightness',\n            'contrast': 'contrast',\n            'saturation': 'saturation',\n            'color': 'saturation'\n        }\n    }\n\n    browserClientStateChanged = (clientState: ClientState) => {\n        this.setState({\n            ...this.state,\n            clientState });\n    };\n\n    updateStateBySegmentChange: SegmentChangeCallback = (segment: Segment) => {\n        this.updateWords(segment.words, segment.contextId, segment.id);\n        if (!segment.isFinal) {\n            return\n        }\n        if (segment.intent.intent.length > 0) {\n            const intent = segment.intent;\n            if (intent.intent === \"undo\") {\n                this.props.imageEditor.undo();\n            } else if (intent.intent === \"add_filter\") {\n                const filterName = this.collectEntity(segment.entities, \"filter\");\n                if (filterName in this.entity2canonical) {\n                    this.props.imageEditor.enableFilter(this.entity2canonical[filterName]);\n                }\n            } else if (intent.intent === \"remove_filter\") {\n                const filterName = this.collectEntity(segment.entities, \"filter\");\n                if (filterName in this.entity2canonical) {\n                    this.props.imageEditor.disableFilter(this.entity2canonical[filterName]);\n                }\n            } else if (intent.intent === \"increase\") {\n                const propertyName = this.collectEntity(segment.entities, \"property\");\n                if (propertyName in this.entity2canonical) {\n                    this.props.imageEditor.incrementProperty(this.entity2canonical[propertyName]);\n                }\n            } else if (intent.intent === \"decrease\") {\n                const propertyName = this.collectEntity(segment.entities, \"property\");\n                if (propertyName in this.entity2canonical) {\n                    this.props.imageEditor.decrementProperty(this.entity2canonical[propertyName]);\n                }\n            }\n        }\n    };\n\n    private collectEntity = (entityList, entityType: string) => {\n        const entities = entityList.filter(item => item.type === entityType);\n        if (entities.length > 0) {\n            // In our case there should only be a single entity of a given type in a segment,\n            // so we just return the first item on the list if it exsists.\n            return entities[0].value.toLowerCase();\n        }\n        return '';\n    }\n\n    startContext = (event: any) => {\n        if (this.state.clientState === ClientState.Disconnected) {\n            this.client.initialize((err?: Error) => {\n                if (err) {\n                    console.error(\"Error initializing Speechly client:\", err);\n                    return;\n                }\n            });\n            return;\n        }\n\n        if (this.state.clientState === ClientState.Connected) {\n            this.client.startContext((err?: Error) => {\n                if (err) {\n                    console.error(\"Could not start recording\", err);\n                    return;\n                }\n            });\n        }\n    };\n\n    stopContext = (event: any) => {\n        this.toggleRecordButtonState(false);\n        const { recordButtonIsPressedStarted, recordButtonIsPressedStopped } = this.state;\n\n        this.stopRecording(event);\n        if (recordButtonIsPressedStarted && recordButtonIsPressedStopped) {\n            this.setState({\n                ...this.state,\n                isTapping: Boolean(recordButtonIsPressedStopped.getTime() - recordButtonIsPressedStarted.getTime() < 1000)\n            });\n        }\n    };\n\n    toggleRecordButtonState = (recordButtonIsPressed: boolean) => {\n        this.setState({\n            ...this.state,\n            isTapping: false,\n            recordButtonIsPressed,\n            recordButtonIsPressedStarted: recordButtonIsPressed ? new Date() : this.state.recordButtonIsPressedStarted,\n            recordButtonIsPressedStopped: !recordButtonIsPressed ? new Date() : this.state.recordButtonIsPressedStopped\n        });\n    };\n\n    stopRecording = (event: any) => {\n        if (this.state.clientState !== ClientState.Recording) {\n            return;\n        }\n\n        this.client.stopContext((err?: Error) => {\n            if (err) {\n                console.error(\"Could not stop recording\", err);\n                return;\n            }\n        });\n    };\n\n    readonly closeClient = () => {\n        if (this.state.clientState < ClientState.Connected) {\n            return;\n        }\n        try {\n            this.client.close((err?: Error) => {\n                if (err !== undefined) {\n                    console.error(\"Could not close client\", err);\n                }\n            });\n        } catch (err) {\n            console.error(\"Could not close client\", err);\n        }\n    };\n\n    updateWords = (words: Word[], contextId: string, segmentId: number) => {\n        let newWords = {};\n        if(this.state.contextId === contextId) {\n            newWords = this.state.words;\n        }\n\n        for (var i = 0; i < words.length; i++) {\n            if(words[i] && words[i].index) {\n                newWords[parseInt(words[i].index)] = words[i];\n            }\n        }\n\n        this.setState({\n            ...this.state,\n            words: newWords,\n            contextId });\n\n        const transcriptDiv = this.props.transcriptDiv;\n        if(newWords) {\n            const html = Object.keys(newWords).map(key => parseInt(key)).sort()\n                  .map((key) => (newWords[key].isFinal ? `<b>${newWords[key].value}</b>` : newWords[key].value))\n                  .join(\" \"); \n            transcriptDiv.innerHTML = html;\n        }\n    };\n\n    render() {\n        return (\n                <ConnectionContext.Provider\n            value={{\n                ...this.state,\n                startContext: this.startContext,\n                stopContext: this.stopContext,\n                closeClient: this.closeClient\n            }}\n                >\n                {this.props.children}\n            </ConnectionContext.Provider>\n        );\n    }\n}\n\nexport default ConnectionContext;\nexport { ConnectionContextProvider };\n","import {fabric} from 'fabric';\nimport { Canvas as FabricCanvas } from 'fabric/fabric-impl';\n\n\ninterface EditorState {\n    [name: string]: number;\n}\n\ninterface Operator {\n    type: string;\n    name: string;\n    value: number;\n}\n\nexport class CanvasEditor {\n    editorHTMLDiv: HTMLDivElement;\n    imageUrl: string;\n    canvas: FabricCanvas;\n    htmlCanvas: HTMLCanvasElement;\n    operatorStack: Operator[];\n    imageObject: fabric.Image;\n    stepSize: Map<string, number> = new Map<string, number>();\n\n    constructor(editorHTMLDiv: HTMLDivElement, imageUrl: string) {\n        this.editorHTMLDiv = editorHTMLDiv;\n        this.imageUrl = imageUrl;\n\n        this.htmlCanvas = document.createElement('canvas');\n        this.htmlCanvas.id = \"canvas\";\n        this.resize();\n        this.editorHTMLDiv.appendChild(this.htmlCanvas);\n\n        fabric.Object.prototype.transparentCorners = false;\n\n        const canvas = new fabric.Canvas(this.htmlCanvas);\n        this.canvas = canvas;\n        this.imageObject = new fabric.Image();\n        const outerScope = this;\n        fabric.Image.fromURL(imageUrl, function(img: fabric.Image) {\n            if (img) {\n                outerScope.imageObject = img;\n                const oImg = resizeElements(img, canvas);\n                outerScope.canvas.add(oImg);\n            }\n        });\n\n        this.stepSize.set('brightness', 0.1);\n        this.stepSize.set('contrast', 0.1);\n        this.stepSize.set('saturation', 0.2);\n\n        this.operatorStack = []\n    }\n\n    public incrementProperty = (propertyName: string) => {\n        console.log('incrementProperty ' + propertyName)\n        let tmp = this.stepSize.get(propertyName)\n        this.operatorStack.push({type: 'property',\n                                 name: propertyName,\n                                 value: (tmp) ? tmp : 0});\n        this.updateImage();\n    }\n\n    public decrementProperty = (propertyName: string) => {\n        console.log('decrementProperty ' + propertyName)\n        let tmp = this.stepSize.get(propertyName)\n        this.operatorStack.push({type: 'property',\n                                 name: propertyName,\n                                 value: (tmp) ? -1*tmp : 0});\n        this.updateImage();\n    }\n\n    public enableFilter = (filterName: string) => {\n        console.log('enableFilter ' + filterName)\n        this.operatorStack.push({type: 'filter',\n                                  name: filterName,\n                                  value: 1});\n        this.updateImage();\n    }\n\n    public disableFilter = (filterName: string) => {\n        console.log('disableFilter ' + filterName)\n        this.operatorStack.push({type: 'filter',\n                                  name: filterName,\n                                  value: 0});\n        this.updateImage();\n    }\n\n    public undo = () => {\n        console.log('at undo');\n        this.operatorStack.pop();\n        this.updateImage();\n    }\n\n    private updateImage = () => {\n        console.log(this.operatorStack);\n        let state: EditorState = this.buildEditorState();\n        console.log(state);\n        this.imageObject.filters = [];\n\n        if (state.brightness !== 0.0) {\n            let filter = new fabric.Image.filters.Brightness({brightness: state.brightness});\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.contrast !== 0.0) {\n            let filter = new fabric.Image.filters.Contrast({contrast: state.contrast});\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.saturation !== 0.0) {\n            let filter = new fabric.Image.filters.Saturation({saturation: state.saturation});\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.kodachrome > 0) {\n            let filter = this.makeKodachromeFilter();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.vintage > 0) {\n            let filter = this.makeVintageFilter();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.technicolor > 0) {\n            let filter = this.makeTechnicolorFilter();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.polaroid > 0) {\n            let filter = this.makePolaroidFilter();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.sepia > 0) {\n            let filter = new fabric.Image.filters.Sepia();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.grayscale > 0) {\n            let filter = new fabric.Image.filters.Grayscale();\n            this.imageObject.filters.push(filter);\n        }\n\n        this.imageObject.applyFilters()\n        this.canvas.renderAll()\n    }\n\n    private buildEditorState = (): EditorState => {\n        // const state = new EditorState();\n        let state: EditorState = this.cleanEditorState();\n        for (let op of this.operatorStack) {\n            if (op.type === 'property') {\n                state[op.name] += op.value;\n            }\n            else if (op.type === 'filter') {\n                state[op.name] = op.value;\n            }\n        }\n        return state;\n    }\n\n    private cleanEditorState = (): EditorState => {\n        return {\n            brightness: 0.0,\n            contrast: 0.0,\n            saturation: 0.0,\n            grayscale: 0,\n            kodachrome: 0,\n            vintage: 0,\n            sepia: 0,\n            technicolor: 0,\n            polaroid: 0\n        };\n    }\n\n    private resize = () => {\n        const w = window.innerWidth\n        const h = window.innerHeight\n        this.htmlCanvas.width = w\n        this.htmlCanvas.height = h\n        this.htmlCanvas.style.width = `${w}px`\n        this.htmlCanvas.style.height = `${h}px - 60px`\n    }\n\n    private makeKodachromeFilter = () : fabric.IBaseFilter => {\n        console.log('at makeKodachromeFilter')\n        return new fabric.Image.filters.ColorMatrix({\n            matrix: [\n                1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n                -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n                -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n                0, 0, 0, 1, 0\n            ]\n        });\n    }\n\n    private makeVintageFilter = () : fabric.IBaseFilter => {\n        console.log('at makeVintageFilter')\n        return new fabric.Image.filters.ColorMatrix({\n            matrix: [\n                0.62793,0.32021,-0.03965,0,0.03784,\n                0.02578,0.64411,0.03259,0,0.02926,\n                0.04660,-0.08512,0.52416,0,0.02023,\n                0,0,0,1,0\n            ]\n        });\n    }\n\n\n    private makeTechnicolorFilter = () : fabric.IBaseFilter => {\n        console.log('at makeTechnicolorFilter')\n        return new fabric.Image.filters.ColorMatrix({\n            matrix: [\n                1.91252,-0.85453,-0.09155,0,0.04624,\n                -0.30878,1.76589,-0.10601,0,-0.27589,\n                -0.23110,-0.75018,1.84759,0,0.12137,\n                0,0,0,1,0\n            ]\n        });\n    }\n\n\n    private makePolaroidFilter = () : fabric.IBaseFilter => {\n        console.log('at makePolaroidFilter')\n        return new fabric.Image.filters.ColorMatrix({\n            matrix: [\n                1.438,-0.062,-0.062,0,0,\n                -0.122,1.378,-0.122,0,0,\n                -0.016,-0.016,1.483,0,0,\n                0,0,0,1,0\n            ]\n        });\n    }\n}\n\n\nconst resizeElements = (img: fabric.Image,\n                        canvas: fabric.Canvas) : fabric.Image => {\n    const imageScaler = 0.7 // make it slightly smaller\n    const imageOriginalHeight = img.height || 1000;\n    const imageOriginalWidth = img.width || 1000;\n    const imgRatio = imageOriginalHeight/ imageOriginalWidth;\n    const winRatio = window.innerHeight / window.innerWidth;\n    const container = document.getElementsByClassName(\"canvas-container\")[0] as HTMLDivElement;\n    let oImg: fabric.Image;\n    if (imgRatio < winRatio) {\n        const w = window.innerWidth * imageScaler;\n        const h = (w * imgRatio) * imageScaler;\n        const scaleX = w / imageOriginalWidth;\n        const scaleY = h / imageOriginalHeight;\n        oImg = img.set({\n            left: 0,\n            top: (window.innerHeight - h) / 10,\n            scaleX: scaleX,\n            scaleY: scaleY\n        }) as fabric.Image;\n        container.style.height = `${h}px`;\n    } else {\n        const w = (window.innerWidth * winRatio / imgRatio) * imageScaler;\n        const h = window.innerHeight * imageScaler;\n        const scaleX = w / imageOriginalWidth;\n        const scaleY = h / imageOriginalHeight;\n        oImg = img.set({\n            left: (window.innerWidth - w) / 2,\n            top: 0,\n            scaleX: scaleX,\n            scaleY: scaleY\n        }) as fabric.Image;\n        container.style.height = `${h}px`;\n    }\n    return oImg;\n};\n","import React, {useLayoutEffect, useEffect, useRef, useState } from \"react\";\nimport {NavLinkProps} from \"react-router-dom\";\nimport {Location} from \"history\";\nimport './layout.css';\nimport { Mic } from \"./Mic\";\nimport ConnectionContext, { ConnectionContextProvider } from \"./ConnectionContext\";\nimport {CanvasEditor} from './CanvasEditor';\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\ninterface ExtendedLocation extends Location {\n    imgPath: string;\n};\n\ntype LocalStorageObject = {\n    imgPath: string;\n};\n\nconst LocalStorageKey = 'Speechly-image-editor-imagePath';\nconst Editor = (props: NavLinkProps) => {\n    const imageEditorRef = useRef<HTMLDivElement>(null);\n    const transcriptDivRef = useRef<HTMLDivElement>(null);\n    const [imageEditorInstance, setImageEditorInstance] = useState<CanvasEditor>();\n    const [imagePath, setImagePath] = useState<string>();\n    const appId = process.env.REACT_APP_APP_ID;\n    if(!appId) {\n        throw new Error('REACT_APP_APP_ID environment variable is undefined!')\n    }\n    const language = process.env.REACT_APP_LANGUAGE;\n    if(!language) {\n        throw new Error('REACT_APP_LANGUAGE environment variable is undefined!')\n    }\n\n    useEffect(() => {\n        if(props.location) {\n            const location = props.location as ExtendedLocation;\n            let imgPath = location.imgPath;\n            if(imgPath) {\n                const storageObject: LocalStorageObject = { imgPath: imgPath };\n                localStorage.setItem(LocalStorageKey, JSON.stringify(storageObject));\n            } else {\n                const json: string = localStorage.getItem(LocalStorageKey) as string;\n                const storageObject: LocalStorageObject = JSON.parse(json) as LocalStorageObject;\n                imgPath = storageObject.imgPath;\n            }\n            setImagePath(imgPath);\n        }\n    }, [props.location]);\n    \n    const [width, height] = useWindowSize();\n    useEffect(() => {\n        if (!imageEditorInstance && imagePath) {\n            const editor = new CanvasEditor(imageEditorRef.current as HTMLDivElement, imagePath as string);\n            setImageEditorInstance(editor);\n        }\n    }, [imageEditorRef, imagePath, width, height, imageEditorInstance]);\n    \n    return (\n        <div style={{width: width, height: Math.min(height, 500)}}>\n                <section className=\"photo\">\n                    <div ref={imageEditorRef} />\n                </section>\n                <section className=\"app\">\n                    <div ref={transcriptDivRef} />\n                </section>\n\n                <section className=\"controls\">\n                <ConnectionContextProvider \n                    appId={appId} \n                    language={language} \n                    imageEditor={imageEditorInstance as CanvasEditor}\n                    transcriptDiv={transcriptDivRef.current as HTMLDivElement} >\n                    <ConnectionContext.Consumer>\n                        {({ stopContext, startContext, closeClient, clientState }) => {\n                            return (\n                                <div>\n                                    <Mic \n                                    onUp={stopContext}\n                                    onDown={startContext}\n                                    onUnmount={closeClient}\n                                    clientState={clientState}\n                                    classNames=\"Playground__mic\" />\n                                    <section className=\"app\">\n                                        <i><b>Try out these:</b></i>\n                                        <ul>\n                                            <li>make it black and white</li>\n                                            <li>make it classic</li>\n                                            <li>increase the light</li>\n                                            <li>reduce the light</li>\n                                            <li>magnify little bit</li>\n                                            <li>make it black and white and reduce the light</li>\n                                            <li>increase the light and make it classic</li>\n                                        </ul>\n                                    </section>\n                                </div>\n                            );\n                        }}\n                    </ConnectionContext.Consumer>\n                </ConnectionContextProvider>\n                </section>\n        </div>\n    );\n};\n\nexport default Editor;","import \"./layout.css\";\nimport React, { useRef, useState } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport logo from './img/logo.png';\n\ntype Images = {\n    imgPath: string[]\n}\n\nconst Onboard = () => {\n    const [allowAudio, setAllowAudio] = useState<boolean>(false);\n    const [images, setImages] = useState<Images>({imgPath: [process.env.PUBLIC_URL + '/images/microphone_smaller.jpg']});\n    const imageInput = useRef<HTMLInputElement>(null);\n\n    const addFile = () => {\n        if (imageInput.current?.files) {\n            const newImage = imageInput.current.files[0];\n            setImages({\n                imgPath: [...images.imgPath, URL.createObjectURL(newImage)]\n            })\n        }\n    };\n    \n    const buttonClass = (allowAudio) ? 'btn' : 'btn btn-disabled'\n    const lastImage: string = images.imgPath.slice(-1)[0];\n    const editorLinkParams = { \n        pathname: \"/edit/\", \n        imgPath: lastImage\n    };\n    return (\n        <div>\n            <section className=\"app intro\">\n\n            <img className=\"logo\" src={logo} alt=\"\"></img>\n            <section className=\"onboarding\">\n                <h1>Use speech to edit and apply filters for your  photos and images</h1>\n\n                <section className=\"gallery\">\n                    {images.imgPath.map((path: string, index: number) => {\n                        return (\n                            <section className=\"thumbnail\" key={index}>\n                                <img src={path} alt=\"\"></img>\n                            </section>\n                        )\n                    })}\n                    \n                    <section className=\"upload upload-btn-wrapper\">\n                        <button className=\"upload-btn\">Upload</button>\n                        <input type=\"file\" name=\"myfile\" ref={imageInput} onChange={addFile}/>\n                    </section>\n                </section>\n\n                <section className=\"formRow\">\n                    <input type=\"checkbox\" name=\"micro\" id=\"micro\" value=\"\" \n                        checked={allowAudio} \n                        onChange={(value) => setAllowAudio(value.target.checked)}></input>\n                    <label htmlFor=\"micro\">Allow Audio to control over voice</label>\n                </section>\n\n                <Link to={editorLinkParams} className={buttonClass}>Start editing</Link>\n                </section>\n            </section>\n        </div>\n    );\n};\n\nexport default Onboard;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Editor from \"./Editor\";\nimport Onboard from \"./Onboard\";\n  \nconst App = () => {\n\n    return (\n        <div>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Onboard} />\n                    <Route exact path=\"/edit\" component={Editor} />\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","module.exports = __webpack_public_path__ + \"static/media/logo.4ecbb0d2.png\";"],"sourceRoot":""}