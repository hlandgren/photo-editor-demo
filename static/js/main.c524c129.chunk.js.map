{"version":3,"sources":["Mic.tsx","ConnectionContext.tsx","CanvasEditor.ts","Editor.tsx","Onboard.tsx","App.tsx","index.js","img/logo.png"],"names":["passiveSupported","options","window","addEventListener","removeEventListener","err","Mic","props","rootDiv","onKeyUp","onKeyDown","onUnmount","React","createRef","onDown","onUp","event","cb","this","current","passive","document","onkeydown","e","handleSpacebar","onkeyup","clientConnecting","clientState","ClientState","Connecting","clientConnected","Connected","rootClassName","classNames","micClassName","hidden","Microphone__button__active","Recording","Microphone__button__inactive","Stopping","helpClassName","console","log","stateToString","className","ref","style","height","CircularProgress","size","xmlns","aria-hidden","tabIndex","viewBox","stroke","strokeWidth","cx","cy","r","fill","d","transform","x","y","Component","keyCode","preventDefault","defaultState","stopContext","_event","startContext","intents","entities","brightness","recordButtonIsPressed","isTapping","Disconnected","words","contextId","ConnectionContext","createContext","ConnectionContextProvider","browserClientStateChanged","setState","state","updateStateBySegmentChange","segment","updateWords","id","isFinal","intent","length","imageEditor","undo","filters","filter","item","type","filterEntity2canonical","value","toLowerCase","filterName","applyFilter","changeLuminosity","zoomIn","client","error","initialize","toggleRecordButtonState","recordButtonIsPressedStarted","recordButtonIsPressedStopped","stopRecording","Boolean","getTime","Date","closeClient","close","undefined","segmentId","newWords","i","parseInt","index","transcriptDiv","html","Object","keys","map","key","sort","join","innerHTML","clientBasicParams","appId","language","Client","onSegmentChange","onStateChange","change","newBrightness","Provider","children","resizeElements","img","canvas","oImg","imageOriginalHeight","imageOriginalWidth","width","imgRatio","winRatio","innerHeight","innerWidth","container","getElementsByClassName","w","h","scaleX","scaleY","set","left","top","CanvasEditor","editorHTMLDiv","imageUrl","htmlCanvas","operationStack","imageObject","resize","createElement","appendChild","fabric","prototype","transparentCorners","Canvas","Image","outerScope","fromURL","add","f","name2filter","Grayscale","Sepia","Brightness","push","operation","existingFilter","applyFilters","renderAll","zoomValue","reduce","a","b","centerY","centerX","zoomToPoint","Point","pop","clear","newZoomValue","zooms","Editor","imageEditorRef","useRef","transcriptDivRef","useState","imageEditorInstance","setImageEditorInstance","imagePath","setImagePath","process","useEffect","location","imgPath","storageObject","localStorage","setItem","JSON","stringify","json","getItem","parse","setSize","useLayoutEffect","updateSize","useWindowSize","editor","Math","min","Consumer","Onboard","allowAudio","setAllowAudio","images","setImages","imageInput","buttonClass","editorLinkParams","pathname","slice","src","logo","alt","path","name","onChange","files","newImage","URL","createObjectURL","checked","target","htmlFor","to","App","exact","component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c524c129.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport { ClientState, stateToString } from \"@speechly/browser-client\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nlet passiveSupported = false;\ntry {\n  const options = {\n    get passive() {\n      // This function will be called when the browser attempts to access the passive property.\n      passiveSupported = true;\n      return passiveSupported;\n    }\n  };\n\n  // @ts-ignore\n  window.addEventListener(\"test\", options, options);\n  // @ts-ignore\n  window.removeEventListener(\"test\", options, options);\n} catch (err) {\n  passiveSupported = false;\n}\n\ninterface MicProps {\n  onDown: EventListener;\n  onUp: EventListener;\n  onUnmount: () => void;\n  clientState: ClientState;\n  classNames: string;\n}\n\nexport class Mic extends React.Component<MicProps, {}> {\n  private readonly rootDiv: React.RefObject<HTMLDivElement>;\n  private readonly onKeyUp: EventListener;\n  private readonly onKeyDown: EventListener;\n  private readonly onUnmount: () => void;\n\n  constructor(props: MicProps) {\n    super(props);\n\n    this.rootDiv = React.createRef<HTMLDivElement>();\n    this.onKeyDown = props.onDown;\n    this.onKeyUp = props.onUp;\n    this.onUnmount = props.onUnmount;\n  }\n\n  private addEventListener(event: string, cb: EventListener) {\n    if (this.rootDiv.current === null) {\n      return;\n    }\n\n    this.rootDiv.current.addEventListener(event, cb, passiveSupported ? { passive: false } : false);\n  }\n\n  private removeEventListener(event: string, cb: EventListener) {\n    if (this.rootDiv.current === null) {\n      return;\n    }\n\n    this.rootDiv.current.removeEventListener(event, cb);\n  }\n\n  componentDidMount() {\n    document.onkeydown = e => handleSpacebar(e, this.onKeyDown);\n    document.onkeyup = e => handleSpacebar(e, this.onKeyUp);\n\n    this.addEventListener(\"touchstart\", this.onKeyDown);\n    this.addEventListener(\"touchend\", this.onKeyUp);\n    this.addEventListener(\"mousedown\", this.onKeyDown);\n    this.addEventListener(\"mouseup\", this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.onkeydown = null;\n    document.onkeyup = null;\n\n    this.removeEventListener(\"touchstart\", this.onKeyDown);\n    this.removeEventListener(\"touchend\", this.onKeyUp);\n    this.removeEventListener(\"mousedown\", this.onKeyDown);\n    this.removeEventListener(\"mouseup\", this.onKeyUp);\n\n    this.onUnmount();\n  }\n\n  render() {\n    const clientConnecting = this.props.clientState === ClientState.Connecting;\n    const clientConnected = this.props.clientState >= ClientState.Connected;\n\n    const rootClassName = `Microphone ${this.props.classNames}`;\n\n    const micClassName = classNames(\"Microphone__button\", {\n      hidden: !clientConnected,\n      Microphone__button__active: this.props.clientState === ClientState.Recording,\n      Microphone__button__inactive: this.props.clientState === ClientState.Stopping\n    });\n\n    const helpClassName = classNames(\"Microphone__help\", \"HelpText\", {\n      hidden: !clientConnected\n    });\n    console.log(\"Client state: \" + stateToString(this.props.clientState));\n    console.log(micClassName);\n    return (\n      <div className={rootClassName} ref={this.rootDiv}>\n        <div style={{height: '50px'}}></div>\n        {clientConnecting && <CircularProgress size=\"3vh\" className=\"Microphone__loading\" />}\n        <div className={micClassName}>\n          <object>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" tabIndex={0} viewBox=\"-2 -2 24 24\">\n              <circle stroke=\"#d8dfe6\" strokeWidth=\"0.5\" cx=\"10\" cy=\"10\" r=\"15\" fill=\"#ffffff\" />\n              <path d=\"M10 10\" />\n              <path\n                transform=\"translate(2,2) scale(0.8)\"\n                x=\"10\"\n                y=\"10\"\n                d=\"M9 18v-1.06A8 8 0 0 1 2 9h2a6 6 0 1 0 12 0h2a8 8 0 0 1-7 7.94V18h3v2H6v-2h3zM6 4a4 4 0 1 1 8 0v5a4 4 0 1 1-8 0V4z\"\n              />\n            </svg>\n          </object>\n        </div>\n        <div className={helpClassName}>Press and hold space bar to talk</div>\n      </div>\n    );\n  }\n}\n\nfunction handleSpacebar(e: KeyboardEvent, cb: EventListener) {\n  if (e.keyCode === 32) {\n    e.preventDefault();\n    cb(e);\n  }\n}","// @ts-nocheck\nimport React, { Component } from \"react\";\nimport {\n  Client,\n  ClientState,\n  Segment,\n  SegmentChangeCallback,\n  Entity as BrowserClientEntity,\n  Intent as BrowserClientIntent\n} from \"@speechly/browser-client\";\nimport {CanvasEditor} from './CanvasEditor';\n\ninterface Entity extends BrowserClientEntity {\n    contextId: string;\n    segmentId: number;\n}\n\ninterface Intent extends BrowserClientIntent {\n  contextId: string;\n  segmentId: number;\n}\n  \ntype IConnectionContextProps = {\n  appId: string;\n  language: string;\n  imageEditor: CanvasEditor;\n  transcriptDiv: HTMLDivElement;\n};\ntype IConnectionContextState = {\n  isTapping: boolean;\n  recordButtonIsPressed: boolean;\n  recordButtonIsPressedStarted?: Date;\n  recordButtonIsPressedStopped?: Date;\n  intents: Intent[];\n  entities: Entity[];\n  brightness: number;\n  stopContext: (event: any) => void;\n  startContext: (event: any) => void;\n  closeClient: () => void;\n  clientState: ClientState;\n  words: {};\n  contextId: string;\n};\n\nconst defaultState: IConnectionContextState = {\n  stopContext: (_event: Event) => {},\n  startContext: (_event: Event) => {},\n  intents: [],\n  entities: [],\n  brightness: 0.0,\n  recordButtonIsPressed: false,\n  isTapping: false,\n  clientState: ClientState.Disconnected,\n  words: {},\n  contextId: \"\"\n};\n\nconst ConnectionContext = React.createContext<IConnectionContextState>(defaultState);\nclass ConnectionContextProvider extends Component<IConnectionContextProps, IConnectionContextState> {\n  constructor(props: any) {\n    super(props);\n\n    const clientBasicParams = {\n      appId: this.props.appId,\n      language: this.props.language\n    };\n\n    console.log(\"Initializing client\", clientBasicParams);\n    this.client = new Client(clientBasicParams);\n    this.client.onSegmentChange(this.updateStateBySegmentChange);\n    this.client.onStateChange(this.browserClientStateChanged);\n\n    this.state = defaultState;\n  }\n\n  browserClientStateChanged = (clientState: ClientState) => {\n    this.setState({ \n      ...this.state,\n      clientState });\n  };\n\n  updateStateBySegmentChange: SegmentChangeCallback = (segment: Segment) => {\n    this.updateWords(segment.words, segment.contextId, segment.id);\n    if (!segment.isFinal) {\n      return\n    }\n    if (segment.intent.intent.length > 0) {\n      const intent = segment.intent;\n      if (intent.intent === \"undo\") {\n        this.props.imageEditor.undo()\n      } else if (intent.intent === \"add_filter\") {\n        const filters = segment.entities.filter(item => item.type === \"filter\")\n        const filterEntity2canonical = {\n          \"old image\": \"sepia\",\n          \"classic\": \"sepia\",\n          \"black and white\": \"grayscale\"\n        }\n        if (filters.length > 0 && filters[0].value.toLowerCase() in filterEntity2canonical) {\n          const filterName = filterEntity2canonical[filters[0].value.toLowerCase()]\n          this.props.imageEditor.applyFilter(filterName);\n        }\n      } else if (intent.intent === \"increase\") {\n        this.changeLuminosity(0.2)\n        return;\n      } else if (intent.intent === \"decrease\") {\n        this.changeLuminosity(-0.2)\n        return;\n      } else if (intent.intent === \"crop\") {\n        this.props.imageEditor.zoomIn();\n      }\n    }\n    this.setState({\n      ...this.state,\n      clientState: this.state.clientState,\n      brightness: this.state.brightness,\n      contextId: this.state.contextId\n    })\n  };\n\n  changeLuminosity(change) {\n    const newBrightness = this.state.brightness + change;\n    this.setState({\n      ...this.state,\n      clientState: this.state.clientState,\n      brightness: newBrightness\n    })\n    console.log(\"Brightness: \" + newBrightness)\n    this.props.imageEditor.applyFilter(\"brightness\", {brightness: newBrightness});\n  }\n \n  startContext = (event: any) => {\n    if (this.state.clientState === ClientState.Disconnected) {\n      this.client.initialize((err?: Error) => {\n        if (err) {\n          console.error(\"Error initializing Speechly client:\", err);\n          return;\n        }\n      });\n      return;\n    }\n\n    if (this.state.clientState === ClientState.Connected) {\n      this.client.startContext((err?: Error) => {\n        if (err) {\n          console.error(\"Could not start recording\", err);\n          return;\n        }\n      });\n    }\n  };\n\n  stopContext = (event: any) => {\n    this.toggleRecordButtonState(false);\n    const { recordButtonIsPressedStarted, recordButtonIsPressedStopped } = this.state;\n\n    this.stopRecording(event);\n    if (recordButtonIsPressedStarted && recordButtonIsPressedStopped) {\n      this.setState({\n        ...this.state,\n        isTapping: Boolean(recordButtonIsPressedStopped.getTime() - recordButtonIsPressedStarted.getTime() < 1000)\n      });\n    }\n  };\n\n  toggleRecordButtonState = (recordButtonIsPressed: boolean) => {\n    this.setState({\n      ...this.state,\n      isTapping: false,\n      recordButtonIsPressed,\n      recordButtonIsPressedStarted: recordButtonIsPressed ? new Date() : this.state.recordButtonIsPressedStarted,\n      recordButtonIsPressedStopped: !recordButtonIsPressed ? new Date() : this.state.recordButtonIsPressedStopped\n    });\n  };\n\n  stopRecording = (event: any) => {\n    if (this.state.clientState !== ClientState.Recording) {\n      return;\n    }\n\n    this.client.stopContext((err?: Error) => {\n      if (err) {\n        console.error(\"Could not stop recording\", err);\n        return;\n      }\n    });\n  };\n\n  readonly closeClient = () => {\n    if (this.state.clientState < ClientState.Connected) {\n      return;\n    }\n    try {\n      this.client.close((err?: Error) => {\n        if (err !== undefined) {\n          console.error(\"Could not close client\", err);\n        }\n      });\n    } catch (err) {\n      console.error(\"Could not close client\", err);\n    }\n  };\n\n  updateWords = (words: Word[], contextId: string, segmentId: number) => {\n    let newWords = {};\n    if(this.state.contextId === contextId) {\n      newWords = this.state.words;\n    }\n\n    for (var i = 0; i < words.length; i++) {\n      if(words[i] && \"index\" in words[i]) {\n        newWords[parseInt(words[i].index)] = words[i];\n      }\n    }\n    this.setState({ \n      ...this.state,\n      words: newWords, \n      contextId });\n\n    const transcriptDiv = this.props.transcriptDiv;\n    if(newWords) {\n      const html = Object.keys(newWords).map(key => parseInt(key)).sort()\n        .map((key) => (newWords[key].isFinal ? `<b>${newWords[key].value}</b>` : newWords[key].value))\n        .join(\" \"); \n      transcriptDiv.innerHTML = html;\n    }\n  };\n\n  render() {\n    return (\n      <ConnectionContext.Provider\n        value={{\n          ...this.state,\n          startContext: this.startContext,\n          stopContext: this.stopContext,\n          closeClient: this.closeClient\n        }}\n      >\n        {this.props.children}\n      </ConnectionContext.Provider>\n    );\n  }\n}\n\nexport default ConnectionContext;\nexport { ConnectionContextProvider };\n","import {fabric} from 'fabric';\nimport { Canvas as FabricCanvas } from 'fabric/fabric-impl';\n\nconst resizeElements = (img: fabric.Image,\n                        canvas: fabric.Canvas) : fabric.Image => {\n    const imageScaler = 0.7 // make it slightly smaller\n    const imageOriginalHeight = img.height || 1000;\n    const imageOriginalWidth = img.width || 1000;\n    const imgRatio = imageOriginalHeight/ imageOriginalWidth;\n    const winRatio = window.innerHeight / window.innerWidth;\n    const container = document.getElementsByClassName(\"canvas-container\")[0] as HTMLDivElement;\n    let oImg: fabric.Image;\n    if (imgRatio < winRatio) {\n        const w = window.innerWidth * imageScaler;\n        const h = (w * imgRatio) * imageScaler;\n        const scaleX = w / imageOriginalWidth;\n        const scaleY = h / imageOriginalHeight;\n        oImg = img.set({ \n            left: 0, \n            top: (window.innerHeight - h) / 10, \n            scaleX: scaleX, \n            scaleY: scaleY\n        }) as fabric.Image;\n        container.style.height = `${h}px`;\n        //container.style.width = `${w}px`;                 \n    } else {\n        const w = (window.innerWidth * winRatio / imgRatio) * imageScaler;\n        const h = window.innerHeight * imageScaler;\n        const scaleX = w / imageOriginalWidth;\n        const scaleY = h / imageOriginalHeight;\n        oImg = img.set({ \n            left: (window.innerWidth - w) / 2, \n            top: 0, \n            scaleX: scaleX,\n            scaleY: scaleY\n        }) as fabric.Image;\n        container.style.height = `${h}px`;\n        //container.style.width = `${w}px`;\n    }\n    return oImg;\n};\n\nexport class CanvasEditor {\n    editorHTMLDiv: HTMLDivElement;\n    imageUrl: string;\n    canvas: FabricCanvas;\n    htmlCanvas: HTMLCanvasElement;\n    operationStack: any[];\n    imageObject: fabric.Image;\n\n    constructor(editorHTMLDiv: HTMLDivElement, imageUrl: string) {\n        this.editorHTMLDiv = editorHTMLDiv;\n        this.imageUrl = imageUrl;\n        \n        this.htmlCanvas = document.createElement('canvas');\n        this.htmlCanvas.id = \"canvas\";\n        this.resize();\n        this.editorHTMLDiv.appendChild(this.htmlCanvas);\n\n        fabric.Object.prototype.transparentCorners = false;\n\n        const canvas = new fabric.Canvas(this.htmlCanvas);\n        this.canvas = canvas;\n        this.imageObject = new fabric.Image();\n        const outerScope = this;\n        fabric.Image.fromURL(imageUrl, function(img: fabric.Image) {\n            if (img) {\n                outerScope.imageObject = img;\n                const oImg = resizeElements(img, canvas);\n                outerScope.canvas.add(oImg);\n            }\n        });\n\n        this.operationStack = []\n    }\n\n    resize = () => {\n        const w = window.innerWidth\n        const h = window.innerHeight\n        this.htmlCanvas.width = w\n        this.htmlCanvas.height = h\n        this.htmlCanvas.style.width = `${w}px`\n        this.htmlCanvas.style.height = `${h}px - 60px`\n    }\n\n    applyFilter(filterName: string, options?: Object) {\n        const f = fabric.Image.filters;\n        const name2filter = {\n            'grayscale': f.Grayscale,\n            'sepia': f.Sepia,\n            'brightness': f.Brightness\n        };\n        if (filterName in name2filter) {\n            // @ts-ignore\n            let filter: fabric.IBaseFilter = (options) ? new name2filter[filterName](options) : new name2filter[filterName]();\n            this.operationStack.push({type:\"filter\", operation: filter});\n            const existingFilter = this.imageObject.filters?.filter((filter) => filterName in filter)\n            if (existingFilter && existingFilter?.length > 0) {\n                if(filterName === 'brightness' && options) {\n                    // @ts-ignore\n                    existingFilter[0].brightness = options?.brightness;\n                }\n            } else {\n                this.imageObject.filters?.push(filter)\n            }\n            this.imageObject.applyFilters()\n            this.canvas.renderAll()\n        }\n    }\n\n    zoomIn() {\n        this.operationStack.push({type: \"zoom\", operation: 0.2})\n        const zooms = this.operationStack.filter(item => item.type === \"zoom\").map(item => item.operation);\n        const zoomValue: number = 1 + zooms.reduce((a,b) => a+b)\n        const centerY = window.innerHeight / 2;\n        const centerX = window.innerWidth / 2;\n        this.canvas.zoomToPoint(new fabric.Point(centerX,centerY), zoomValue);\n    }\n    \n    undo() {\n        if(this.operationStack.length > 0) {\n            this.operationStack.pop();\n\n            const outerScope = this;\n            this.canvas.clear()\n            fabric.Image.fromURL(this.imageUrl, function(img: fabric.Image) {\n                if (img) {\n                    outerScope.imageObject = img;\n                    const oImg = resizeElements(img, outerScope.canvas);\n\n                    let newZoomValue = 1;\n                    if (outerScope.operationStack.length > 0) {\n                        // RE-APPLY FILTERS\n                        img.filters = outerScope.operationStack.filter(item => item.type === \"filter\").map(item => item.operation);\n                        img.applyFilters();\n\n                        // RE-APPLY ZOOM\n                        const zooms = outerScope.operationStack.filter(item => item.type === \"zoom\").map(item => item.operation);\n                        if (zooms.length > 0) {\n                            newZoomValue += zooms.reduce((a,b) => a+b);\n                        }\n                    }\n                    const centerY = window.innerHeight / 2;\n                    const centerX = window.innerWidth / 2;\n                    outerScope.canvas.zoomToPoint(new fabric.Point(centerX,centerY), newZoomValue);\n                    outerScope.canvas.add(oImg);\n                }\n            });\n        }\n    }\n}\n","import React, {useLayoutEffect, useEffect, useRef, useState } from \"react\";\nimport {NavLinkProps} from \"react-router-dom\";\nimport {Location} from \"history\";\nimport './layout.css';\nimport { Mic } from \"./Mic\";\nimport ConnectionContext, { ConnectionContextProvider } from \"./ConnectionContext\";\nimport {CanvasEditor} from './CanvasEditor';\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\ninterface ExtendedLocation extends Location {\n    imgPath: string;\n};\n\ntype LocalStorageObject = {\n    imgPath: string;\n};\n\nconst LocalStorageKey = 'Speechly-image-editor-imagePath';\nconst Editor = (props: NavLinkProps) => {\n    const imageEditorRef = useRef<HTMLDivElement>(null);\n    const transcriptDivRef = useRef<HTMLDivElement>(null);\n    const [imageEditorInstance, setImageEditorInstance] = useState<CanvasEditor>();\n    const [imagePath, setImagePath] = useState<string>();\n    const appId = process.env.REACT_APP_APP_ID;\n    if(!appId) {\n        throw new Error('REACT_APP_APP_ID environment variable is undefined!')\n    }\n    const language = process.env.REACT_APP_LANGUAGE;\n    if(!language) {\n        throw new Error('REACT_APP_LANGUAGE environment variable is undefined!')\n    }\n\n    useEffect(() => {\n        if(props.location) {\n            const location = props.location as ExtendedLocation;\n            let imgPath = location.imgPath;\n            if(imgPath) {\n                const storageObject: LocalStorageObject = { imgPath: imgPath };\n                localStorage.setItem(LocalStorageKey, JSON.stringify(storageObject));\n            } else {\n                const json: string = localStorage.getItem(LocalStorageKey) as string;\n                const storageObject: LocalStorageObject = JSON.parse(json) as LocalStorageObject;\n                imgPath = storageObject.imgPath;\n            }\n            setImagePath(imgPath);\n        }\n    }, [props.location]);\n    \n    const [width, height] = useWindowSize();\n    useEffect(() => {\n        if (!imageEditorInstance && imagePath) {\n            const editor = new CanvasEditor(imageEditorRef.current as HTMLDivElement, imagePath as string);\n            setImageEditorInstance(editor);\n        }\n    }, [imageEditorRef, imagePath, width, height, imageEditorInstance]);\n    \n    return (\n        <div style={{width: width, height: Math.min(height, 500)}}>\n                <section className=\"photo\">\n                    <div ref={imageEditorRef} />\n                </section>\n                <section className=\"app\">\n                    <div ref={transcriptDivRef} />\n                </section>\n\n                <section className=\"controls\">\n                <ConnectionContextProvider \n                    appId={appId} \n                    language={language} \n                    imageEditor={imageEditorInstance as CanvasEditor}\n                    transcriptDiv={transcriptDivRef.current as HTMLDivElement} >\n                    <ConnectionContext.Consumer>\n                        {({ stopContext, startContext, closeClient, clientState }) => {\n                            return (\n                                <div>\n                                    <Mic \n                                    onUp={stopContext}\n                                    onDown={startContext}\n                                    onUnmount={closeClient}\n                                    clientState={clientState}\n                                    classNames=\"Playground__mic\" />\n                                    <section className=\"app\">\n                                        <i><b>Try out these:</b></i>\n                                        <ul>\n                                            <li>make it black and white</li>\n                                            <li>make it classic</li>\n                                            <li>increase the light</li>\n                                            <li>reduce the light</li>\n                                            <li>magnify little bit</li>\n                                            <li>make it black and white and reduce the light</li>\n                                            <li>increase the light and make it classic</li>\n                                        </ul>\n                                    </section>\n                                </div>\n                            );\n                        }}\n                    </ConnectionContext.Consumer>\n                </ConnectionContextProvider>\n                </section>\n        </div>\n    );\n};\n\nexport default Editor;","import \"./layout.css\";\nimport React, { useRef, useState } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport logo from './img/logo.png';\n\ntype Images = {\n    imgPath: string[]\n}\n\nconst Onboard = () => {\n    const [allowAudio, setAllowAudio] = useState<boolean>(false);\n    const [images, setImages] = useState<Images>({imgPath: [process.env.PUBLIC_URL + '/images/microphone_smaller.jpg']});\n    const imageInput = useRef<HTMLInputElement>(null);\n\n    const addFile = () => {\n        if (imageInput.current?.files) {\n            const newImage = imageInput.current.files[0];\n            setImages({\n                imgPath: [...images.imgPath, URL.createObjectURL(newImage)]\n            })\n        }\n    };\n    \n    const buttonClass = (allowAudio) ? 'btn' : 'btn btn-disabled'\n    const lastImage: string = images.imgPath.slice(-1)[0];\n    const editorLinkParams = { \n        pathname: \"/edit/\", \n        imgPath: lastImage\n    };\n    return (\n        <div>\n            <section className=\"app intro\">\n\n            <img className=\"logo\" src={logo} alt=\"\"></img>\n            <section className=\"onboarding\">\n                <h1>Use speech to edit and apply filters for your  photos and images</h1>\n\n                <section className=\"gallery\">\n                    {images.imgPath.map((path: string, index: number) => {\n                        return (\n                            <section className=\"thumbnail\" key={index}>\n                                <img src={path} alt=\"\"></img>\n                            </section>\n                        )\n                    })}\n                    \n                    <section className=\"upload upload-btn-wrapper\">\n                        <button className=\"upload-btn\">Upload</button>\n                        <input type=\"file\" name=\"myfile\" ref={imageInput} onChange={addFile}/>\n                    </section>\n                </section>\n\n                <section className=\"formRow\">\n                    <input type=\"checkbox\" name=\"micro\" id=\"micro\" value=\"\" \n                        checked={allowAudio} \n                        onChange={(value) => setAllowAudio(value.target.checked)}></input>\n                    <label htmlFor=\"micro\">Allow Audio to control over voice</label>\n                </section>\n\n                <Link to={editorLinkParams} className={buttonClass}>Start editing</Link>\n                </section>\n            </section>\n        </div>\n    );\n};\n\nexport default Onboard;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Editor from \"./Editor\";\nimport Onboard from \"./Onboard\";\n  \nconst App = () => {\n\n    return (\n        <div>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Onboard} />\n                    <Route exact path=\"/edit\" component={Editor} />\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","module.exports = __webpack_public_path__ + \"static/media/logo.4ecbb0d2.png\";"],"sourceRoot":""}